{
    "/users": {
        "GET": {
            "description": "Retrieve all users matching given criteria",
            "operation": "?get=core_model_collect&entity=core\\User"
        }
    },
    "/user/:ids": {
        "GET": {
            "description": "Retrieve fields values related to a given user",
            "operation": "?get=core_model_read&entity=core\\User"
        },
        "PUT": {
            "description": "Update a user",
            "operation": "?do=core_user_update"
        },
        "DELETE": {
            "description": "Delete a user",
            "operation": "?do=core_model_delete&entity=core\\User"
        }
    },
    "/user": {
        "POST": {
            "description": "Create a new user",
            "operation": "?do=core_user_create"
        }
    },
    "/groups": {
        "GET": {
            "description": "Retrieve all groups matching given criteria",
            "operation": "?get=core_model_collect&entity=core\\Group"
        }
    },
    "/group": {
        "POST": {
            "description": "Create a new group",
            "operation": "?do=core_model_create&entity=core\\Group"
        }
    },
    "/group/:ids": {
        "GET": {
            "description": "Retrieve fields values related to a given group",
            "operation": "?get=core_model_read&entity=core\\Group"
        },
        "PUT": {
            "description": "Update a group",
            "operation": "?do=core_model_update&entity=core\\Group"
        },
        "DELETE": {
            "description": "Delete a group",
            "operation": "?do=core_model_delete&entity=core\\Group"
        }
    },
    "/me": {
        "GET": {
            "description": "Return authentified user, if any.",
            "operation": "?get=core_userinfo"
        }
    },
    "/userinfo": {
        "GET": {
            "description": "Retrieve current User object.",
            "operation": "?get=core_userinfo"
        }
    },
    "/envinfo": {
        "GET": {
            "description": "Retrieve public config intended for front-end.",
            "operation": "?get=core_envinfo"
        }
    },
    "/appinfo/:package/:app": {
        "GET": {
            "description": "Provide the manifest of a given App.",
            "operation": "?get=core_appinfo"
        }
    },
    "/welcome": {
        "GET": {
            "description": "Redirects to eQual welcome screen.",
            "operation": "?show=core_welcome"
        }
    },
    "/discord": {
        "GET": {
            "description": "Redirects to eQual welcome screen.",
            "operation": "?show=core_discord"
        }
    }
}